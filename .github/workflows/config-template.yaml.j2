proxy:
  secretToken: "{{ secret_token }}"
  https:
    enabled: {{ https_enabled | default(false) }}
    hosts:
      - "{{ jh_host }}"
    {# type: secret
    secret:
      name: mp-tls #}
    type: manual
    manual:
      key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIEogIBAAKCAQEAu5+l487M4X1t1jWAPzi9Lx/NjV1jfbaHQEC91asEHuECafb9
        fqSbcRm/J2M75YJld01e+6BiHxiFDBMiZAFI/LLCBznqBGQHHdZa9hWarVnN5XJm
        efd0ycaCKysmtQHXlhQ+Q7so44k47iHKLaP90yLvCyVLfohrGcTVGSbLVbc1Pa5e
        i0PvgeHfjQup55Dle5KayjhnCbcRYXe+MjMDHKO79JdFRW+O5HNoUNvIiKBFRPzo
        VU20Q5aiw3j/AkjXFccb6ksBalUXS+M9OIbW/5SahXnyOPVDKNA0DoxhJaFivYO/
        tWB688Rpixlz8hS1iWCKdjQ+T1yQ1V09+zrOqwIDAQABAoIBADKhOS3JP2ZV547X
        bx0gXYTa6ygLnG5vE/5VuiRverQuee1IVk2Xc87IaNnjIGWlk2XnPgte0zua7UQ9
        4Zjk8+IlBtDWYvz+VSFLF86yM8Q1qKcTAO5GxYAxjizB/zb3IUsBeW/jkHweKnuw
        KJO6XiNcmO8ECGRDwcr5X5vi6Rne2KDRWaPyBsyPlkzKN3DCj/O3DfmpVkIjMV07
        g2mYyaUqgJl/YMgrkCKWwxqO1PIdV8w+RsRp8n3GzoY9Z76cVXZ/K7weRQ6XUuM4
        c5z8ZhvpGSwq+IJQRAcL2CUe8Trr04YX8tkbFGoKp+ck7LBjq5suBcTRLvSdSHE+
        XTqNA4ECgYEA8lZvhLO/ljbqBOedMt44bQm1O+A0/Y3kHdz6N3YfG28VKRh9WY5S
        PirfIdrLap0U/DZkx6/213VSDKHZXUEtUxk4WZFeITZ2JjsksTJwfaPwktFeYSxA
        Hy9Gp61gkrdSjBf4ewrn3suMSM12huOOrf3c97h7hKHr/huNqMdDQWsCgYEAxjOL
        4haxbel4RMaD3vikCXijod4cIy7+67HQpmfTwqZygky8XHx/f5+cj0hz0jA9p4Be
        9qRudYMiseFaaPdu3Vxrhbg3vaMUudGgRDu0XNtIeJguqh3+oL/apu2gRYI5ugeY
        MhuC/vNwvhfDf5aPPGlt7tnvY2RG4fx872MJt8ECgYAgfexX243dgyFfZPqTvm3M
        WNfe3lHciTDDvEQkOYc0M3Gf3/O2lTl7sl3WeTJ66fLNWjGrAHHVM5q7rNurADkm
        giQnBjGbvGSc/aMOyxeAEQIJfV7tInS6eak8hCeFpGTB+djMDotGOP5nKH0y2sHf
        nEELScXt45PzrxgQQB9JXwKBgCuj4eLwGDUZOO/7vcF0gbnMJEtZulxM1rhSuJxL
        NCchuwjRmI/Moc4Z+MDbtRTMpmahL0ejQOcC7rq34c5G3NREqzAQNcW9iKy5aU5c
        zwO7DKPw7iVq4UvHsn8axzVGzSsWzP4LbLZyJ5rTZKpNHlCw7hGvTrRVuf28OE4F
        QniBAoGAWj/8OmO78hEq8fW4R2lGWtLpSqBGkADrUE9uU+2X7HayReJ2pPhscSvG
        EZzYumsBAhhiIJjebziyOFcQ6wEC6/fx//oBr8TZlY8aJndFny4gKmagLlzpQlJE
        8dvDO8Tx79OZ+Hhxx45rqAIPNN1vbkzUNy1PrsGeidhXmxY+Akk=
        -----END RSA PRIVATE KEY-----
      cert: |
        -----BEGIN CERTIFICATE-----
        MIIGkzCCBHugAwIBAgIRAMwrBqnzH4AyJs+ShXeBx6UwDQYJKoZIhvcNAQEMBQAw
        SzELMAkGA1UEBhMCQVQxEDAOBgNVBAoTB1plcm9TU0wxKjAoBgNVBAMTIVplcm9T
        U0wgUlNBIERvbWFpbiBTZWN1cmUgU2l0ZSBDQTAeFw0yMzAxMTYwMDAwMDBaFw0y
        MzA0MTYyMzU5NTlaMC0xKzApBgNVBAMTIm1hdGVyaWFscy1tYXJrZXRwbGFjZS5h
        aWlkYWxhYi5uZXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC7n6Xj
        zszhfW3WNYA/OL0vH82NXWN9todAQL3VqwQe4QJp9v1+pJtxGb8nYzvlgmV3TV77
        oGIfGIUMEyJkAUj8ssIHOeoEZAcd1lr2FZqtWc3lcmZ593TJxoIrKya1AdeWFD5D
        uyjjiTjuIcoto/3TIu8LJUt+iGsZxNUZJstVtzU9rl6LQ++B4d+NC6nnkOV7kprK
        OGcJtxFhd74yMwMco7v0l0VFb47kc2hQ28iIoEVE/OhVTbRDlqLDeP8CSNcVxxvq
        SwFqVRdL4z04htb/lJqFefI49UMo0DQOjGEloWK9g7+1YHrzxGmLGXPyFLWJYIp2
        ND5PXJDVXT37Os6rAgMBAAGjggKOMIICijAfBgNVHSMEGDAWgBTI2XhootkZaNU9
        ct5fCj7ctYaGpjAdBgNVHQ4EFgQUcnLLQBv2HCdkED+cQ7JJzSNzIKQwDgYDVR0P
        AQH/BAQDAgWgMAwGA1UdEwEB/wQCMAAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsG
        AQUFBwMCMEkGA1UdIARCMEAwNAYLKwYBBAGyMQECAk4wJTAjBggrBgEFBQcCARYX
        aHR0cHM6Ly9zZWN0aWdvLmNvbS9DUFMwCAYGZ4EMAQIBMIGIBggrBgEFBQcBAQR8
        MHowSwYIKwYBBQUHMAKGP2h0dHA6Ly96ZXJvc3NsLmNydC5zZWN0aWdvLmNvbS9a
        ZXJvU1NMUlNBRG9tYWluU2VjdXJlU2l0ZUNBLmNydDArBggrBgEFBQcwAYYfaHR0
        cDovL3plcm9zc2wub2NzcC5zZWN0aWdvLmNvbTCCAQQGCisGAQQB1nkCBAIEgfUE
        gfIA8AB2AK33vvp8/xDIi509nB4+GGq0Zyldz7EMJMqFhjTr3IKKAAABhbsYWLsA
        AAQDAEcwRQIhALPd0XOfEP+g2GcBaX5kv2NbhU787RKWw1S/kWKKwEWtAiBSEAkR
        xMZiWzFICEHmUghXQx8VoJKeB199tDLSfsMe2gB2AHoyjFTYty22IOo44FIe6YQW
        cDIThU070ivBOlejUutSAAABhbsYWIkAAAQDAEcwRQIhAK9/4ORUxSQ1r1t6z33u
        doLhM8Aas0uU/TF3ucIv4Q2OAiAWtqXaiHcVGhiUNEUHWJ+jk75edZQhgIfMdH/B
        jd7bdTAtBgNVHREEJjAkgiJtYXRlcmlhbHMtbWFya2V0cGxhY2UuYWlpZGFsYWIu
        bmV0MA0GCSqGSIb3DQEBDAUAA4ICAQB8bN8AlKwBIBqQmWJ6/vVLb/aa5cGPhF7Z
        RkKK1AyyNSgSvMa6ACMAM3eI6HQWx8vra8K0TaRRhO/23ikCJpwdOZdrMkvLsfo7
        FDsgEuV6MSbGQeMumFqFXyw0He/SwMDo6wLEMudNUKSBLCGSeeLf+Bw3d4q4/CA+
        3f26KlMruHVl+MTebUkLDTqnpA7f5Gh2wUs6SuZgdEmSY4kkd0cajXl+qFOOHjGI
        usnlCmXNuuTBwE5fj8UcUGe4KAKcvq/oOUhZqw119qofRpDQBBEjC6PcTXydTXYQ
        Eyez1jhC17wW2EDsBhjHnYgKG70HRYDSefoxIkjsHX91O91leNtuI1UORX4sxfcN
        tGNnve8xtjaaO3EJn7HL2ZqEVXS7exTGSxxZ3UIMJBwYxoQqvsJxrPfkV0FIoHd8
        sHh6zkU8ze+zRwX0oxXnKGZ0hJlarRJfvjvMmLhzORAViFEQKkJ4kfnoUEK0e+TB
        6ORTFxkb75i1vI5cXeSdqUBxub9imnJqp9iLf7pdeZ+vmRmEYxE5zHeJyNwTomRm
        w8GZI7+1+Ld6FV/4+chgbsg1ySNxLG2PG3fuRQ3I4i/VlWuUj19SN/EorcTNWDF2
        +kh7k/Aq3gLlP8MgWH7L8cwdQ9933JjfFaYs8FWEF3IZYNc8n7dgvn6K5Cn1FKzm
        0Yq1YzSkJA==
        -----END CERTIFICATE-----

singleuser:
  image:
    name: "{{ image_name }}"
    tag: "{{ image_tag }}"
    pullPolicy: Always
  fsGid: 1000
  cmd: /sbin/my_my_init
  extraEnv:
    NB_USER: "aiida"
    NB_UID: "1000"
    NB_GID: "1000"
    AIIDALAB_FACTORY_RESET: "{{ aiidalab_factory_reset | default('')}}"
{%- if aiidalab_default_apps %}
    AIIDALAB_DEFAULT_APPS: >-
      {{ aiidalab_default_apps.split() | join('\n') | indent(6) }}
{%- endif %}
  storage:
    homeMountPath: "/home/aiida"
    dynamic:
      storageClass: {{ 'do-block-storage' if RELEASE == 'aiidalab-marketplace' else 'aws-efs' }}

  memory:
    limit: 4G
    guarantee: 2G
  cpu:
    limit: 2.0
    guarantee: .5
  startTimeout: 600

hub:
  config:
    JupyterHub:
      authenticator_class: {{ authenticator_class }}
  {%- if authenticator_class == 'github' %}
    GitHubOAuthenticator:
      client_id: "a0a1962c60a60ead5030"
      client_secret: "c99e2859ebe9377d9b282a2574f97e1103c93e75"
      oauth_callback_url: "https://{{ jh_host }}/hub/oauth_callback"
  {%- elif authenticator_class == 'dummy' %}
    DummyAuthenticator:
      password: "{{ auth_password }}"
  {%- endif %}

  db:
    pvc:
      storageClassName: {{ 'do-block-storage' if RELEASE == 'aiidalab-marketplace' else 'gp2' }}

  extraConfig:
    myConfig: |
{# {%- if RELEASE == 'aiidalab-marketplace' %}
      # The code has no indent, in order to keep the indent as in this template
      # wrap the include in a macro name it mpoauth(), the pass this macro function
      # through the indent filter.
      # As described at https://stackoverflow.com/questions/10821539/jinja-keep-indentation-on-include-or-macro
      {% macro mpoauth() %}{% include "./marketplace/oauthenticator.py" %}{% endmacro %}
      {{ mpoauth()|indent(6) }}

      c.JupyterHub.authenticator_class = MarketplaceOAuthenticator
      c.JupyterHub.admin_access = True
      c.JupyterHub.extra_handlers = [
        (
          r'/termsAndConditions',
          TermsConditionsHandler,
        ),
      ]

      c.MarketplaceOAuthenticator.enable_auth_state = True
      c.MarketplaceOAuthenticator.client_id = "{{ oauth_client_id }}"
      c.MarketplaceOAuthenticator.client_secret = "{{ oauth_client_secret }}"
      c.MarketplaceOAuthenticator.oauth_callback_url = 'https://{{ jh_host }}/hub/oauth_callback'

      c.MarketplaceOAuthenticator.userdata_url = "https://{{ marketplace_host }}/auth/realms/marketplace/protocol/openid-connect/userinfo"
      c.MarketplaceOAuthenticator.username_key = "preferred_username"
      c.MarketplaceOAuthenticator.token_url = "https://{{ marketplace_host }}/auth/realms/marketplace/protocol/openid-connect/token"
      c.MarketplaceOAuthenticator.authorize_url = "https://{{ marketplace_host }}/auth/realms/marketplace/protocol/openid-connect/auth"
      c.MarketplaceOAuthenticator.scope = {{ oauth_scope }}
      c.MarketplaceOAuthenticator.admin_users = {{ admin_users }}
{%- endif %} #}

      c.KubeSpawner.http_timeout = 600
      # phusion init system needs to run as root
      c.KubeSpawner.uid = 0
      # Setting the gid was needed to fix
      # https://github.com/aiidalab/aiidalab-docker-stack/issues/20
      c.KubeSpawner.gid = 1000

      # insert template path for custom login template
      c.JupyterHub.template_paths.insert(0, "/etc/jupyterhub/templates")

      # Override default logo
      import urllib.request
      urllib.request.urlretrieve("https://github.com/aiidalab/ansible-role-aiidalab-server/raw/master/files/aiidalab_wide.png", "aiidalab-logo.png")
      c.JupyterHub.logo_file = "aiidalab-logo.png"

scheduling:
  userPods:
    nodeAffinity:
      # matchNodePurpose valid options:
      # - ignore
      # - prefer (the default)
      # - require
      matchNodePurpose: {{ 'prefer' if RELEASE == 'aiidalab-marketplace' else 'require' }}

# removing inactive pods (=no response from the user's browser).
cull:
  enabled: true
  # timeout = 2h
  timeout: 7200
  # check every 10 minutes
  every: 600
