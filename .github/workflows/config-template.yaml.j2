proxy:
    secretToken: "{{ secret_token }}"
    https:
      enabled: true
      hosts:
        - "{{ jh_host }}"
      letsencrypt:
        contactEmail: "{{ contact_email }}"

singleuser:
  image:
    name: "{{ image_name }}"
    tag: "{{ image_tag }}"
    pullPolicy: Always
  fsGid: 1000
  cmd: /sbin/my_my_init
  extraEnv:
    NB_USER: "aiida"
    NB_UID: "1000"
    NB_GID: "1000"
    AWB_APP_VERSION: "{{ aws_app_version | default('') }}"
    QE_APP_VERSION: "{{ qe_app_version | default('') }}"
  storage:
    homeMountPath: "/home/aiida"
    dynamic:
      storageClass: aws-efs
  memory:
    limit: 4G
    guarantee: 2G
  cpu:
    limit: 2.0
    guarantee: .5
  startTimeout: 180

hub:
  config:
    GitHubOAuthenticator:
      client_id: "{{ oauth_client_id }}"
      client_secret: "{{ oauth_client_secret }}"
      oauth_callback_url: "https://{{ jh_host }}/hub/oauth_callback"
      allowed_organizations:
        - aiidalab
      scope:
        - read:user
    JupyterHub:
      authenticator_class: github
  db:
    pvc:
      storageClassName: gp2
  extraConfig:
    myConfig: |
      c.KubeSpawner.http_timeout = 300
      # phusion init system needs to run as root
      c.KubeSpawner.uid = 0
      # Setting the gid was needed to fix
      # https://github.com/aiidalab/aiidalab-docker-stack/issues/20
      c.KubeSpawner.gid = 1000

      # insert template path for custom login template
      c.JupyterHub.template_paths.insert(0, "/etc/jupyterhub/templates")

# removing inactive pods (=no response from the user's browser).
cull:
  enabled: true
  # timeout = 2h
  timeout: 7200
  # check every 10 minutes
  every: 600
